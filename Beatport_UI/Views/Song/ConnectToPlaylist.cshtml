
@model ConnectToPlaylistViewModel

@{
    ViewData["Title"] = "Home Page";
}


<div class="container mx-auto flex flex-column mt-10">
    <div class="w-1/2 mx-auto">
        @if (ViewData["Error"] != null)
        {
            <span asp-validation-for="Bpm" class="text-danger">@ViewData["Error"]</span>
        }
        <form asp-action="ConnectToPlaylist">
            <input asp-for="Playlists" type="hidden">
            <input asp-for="Bpm" type="hidden">
            <input asp-for="Genre" type="hidden">
            <input asp-for="Title" type="hidden">
            <input asp-for="Id" type="hidden">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <h1 class="text-2xl text-white/80 font-bold">Add @Model.Title to playlist</h1>
            <div class="mt-10  flex flex-col gap-2">

                <div class="mt-3">
                    <label for="Title" asp-for="SelectedPlaylistId" class="block text-sm font-medium text-gray-300">Playlist</label>
                    <span asp-validation-for="SelectedPlaylistId" class="text-danger"></span>
                    <div class="mt-2">
                        <div class="flex rounded-md shadow-sm ring-1 ring-gray-300 focus-within:ring-2 focus-within:ring-indigo-600 sm:max-w-md">
                            <select asp-for="SelectedPlaylistId" class="block flex-1 border-0 bg-[#1B1C1E] rounded-md text-gray-900 text-white/80 py-1.5 pl-1 focus:ring-0 sm:text-sm">
                                @foreach (var item in Model.Playlists)
                                {
                                    <option value="@item.Id">@item.Title</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <input type="submit" class="px-4 py-2 bg-[#FF006A] mt-10 rounded text-white" value="Add"/>
            </div>
        </form>
    </div>
</div>





